[{"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\index.js":"1","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\App.js":"2","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\reducers\\index.js":"3","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\reducers\\headmasterReducer.js":"4","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\reducers\\authReducer.js":"5","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\actions\\index.js":"6","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\AdminDashboard.js":"7","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Login\\Login.js":"8","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterDashboard.js":"9","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\utils\\debugMode.js":"10","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\actions\\actionTypes.js":"11","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\Logout.js":"12","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Village\\Village.component.js":"13","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\SchoolForm.js":"14","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Village\\VillageForm.js":"15","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterProfile\\Profile.js":"16","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\Schools.component.js":"17","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterProfile\\ProfileForm.js":"18","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Mentees\\Mentees.js":"19","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\utils\\axiosWithAuth.js":"20","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\Libraries.js":"21","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\EditLibrary.js":"22","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\AddLibrary.js":"23","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterDashboard.style.js":"24","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\FormStyle.js":"25","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\Button.js":"26","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\School.component.js":"27","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\ProfileStyle.js":"28","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\School.styles.js":"29","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Mentees\\MenteeProfile.js":"30","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Mentees\\MenteeForm.js":"31","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\index.js":"32","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\ComponentTitles.js":"33","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\LoadingComponent.js":"34","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\List.js":"35","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\FormInput.js":"36","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\FormButton.js":"37","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Student\\StudentRegistration.js":"38"},{"size":652,"mtime":1610776603674,"results":"39","hashOfConfig":"40"},{"size":1659,"mtime":1610776603650,"results":"41","hashOfConfig":"40"},{"size":406,"mtime":1610776603677,"results":"42","hashOfConfig":"40"},{"size":1566,"mtime":1611169398922,"results":"43","hashOfConfig":"40"},{"size":1351,"mtime":1610776603677,"results":"44","hashOfConfig":"40"},{"size":4818,"mtime":1610776603676,"results":"45","hashOfConfig":"40"},{"size":1100,"mtime":1610776603658,"results":"46","hashOfConfig":"40"},{"size":2797,"mtime":1610776603668,"results":"47","hashOfConfig":"40"},{"size":5182,"mtime":1611169398871,"results":"48","hashOfConfig":"40"},{"size":259,"mtime":1610776603684,"results":"49","hashOfConfig":"40"},{"size":926,"mtime":1610776603675,"results":"50","hashOfConfig":"40"},{"size":568,"mtime":1610776603651,"results":"51","hashOfConfig":"40"},{"size":1904,"mtime":1610776603672,"results":"52","hashOfConfig":"40"},{"size":4758,"mtime":1610776603671,"results":"53","hashOfConfig":"40"},{"size":5262,"mtime":1610776603673,"results":"54","hashOfConfig":"40"},{"size":2440,"mtime":1610776603665,"results":"55","hashOfConfig":"40"},{"size":783,"mtime":1610776603671,"results":"56","hashOfConfig":"40"},{"size":7780,"mtime":1610776603665,"results":"57","hashOfConfig":"40"},{"size":4769,"mtime":1610776603667,"results":"58","hashOfConfig":"40"},{"size":435,"mtime":1610776603683,"results":"59","hashOfConfig":"40"},{"size":3972,"mtime":1610776603660,"results":"60","hashOfConfig":"40"},{"size":4051,"mtime":1610776603660,"results":"61","hashOfConfig":"40"},{"size":3959,"mtime":1610776603657,"results":"62","hashOfConfig":"40"},{"size":575,"mtime":1610776603664,"results":"63","hashOfConfig":"40"},{"size":801,"mtime":1610776603654,"results":"64","hashOfConfig":"40"},{"size":1043,"mtime":1610776603651,"results":"65","hashOfConfig":"40"},{"size":1206,"mtime":1610776603670,"results":"66","hashOfConfig":"40"},{"size":382,"mtime":1610776603655,"results":"67","hashOfConfig":"40"},{"size":263,"mtime":1610776603670,"results":"68","hashOfConfig":"40"},{"size":3311,"mtime":1610776603666,"results":"69","hashOfConfig":"40"},{"size":9586,"mtime":1610776603666,"results":"70","hashOfConfig":"40"},{"size":562,"mtime":1610776603656,"results":"71","hashOfConfig":"40"},{"size":359,"mtime":1610776603652,"results":"72","hashOfConfig":"40"},{"size":285,"mtime":1610776603655,"results":"73","hashOfConfig":"40"},{"size":1528,"mtime":1610776603654,"results":"74","hashOfConfig":"40"},{"size":529,"mtime":1610776603653,"results":"75","hashOfConfig":"40"},{"size":695,"mtime":1610776603652,"results":"76","hashOfConfig":"40"},{"size":1760,"mtime":1611169398908,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"1w6ad7i",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"80"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\index.js",[],["168","169"],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\App.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\reducers\\index.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\reducers\\headmasterReducer.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\reducers\\authReducer.js",["170","171"],"// Reducer file for Login\r\n\r\nimport {\r\n  AUTH_START,\r\n  AUTH_SUCCESS,\r\n  AUTH_FAIL,\r\n  AUTH_LOGOUT,\r\n} from '../actions/actionTypes';\r\n\r\nimport { debugLog } from '../../utils/debugMode';\r\nconst initialState = {\r\n  loggedIn: false,\r\n  userId: 'blank',\r\n  role: 'blank',\r\n};\r\n\r\n//! Temporarily decoding JWT here on behalf of the backend. Lets us work with mock-backend and test out private routing.\r\n//!This should be done server-side.\r\nfunction parseJwt(token) {\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(\r\n    atob(base64)\r\n      .split('')\r\n      .map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n      })\r\n      .join('')\r\n  );\r\n\r\n  return JSON.parse(jsonPayload);\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  // console.log(\"authReducer --> action.payload:\", action.payload);\r\n\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      let decoded = parseJwt(String(action.payload));\r\n      debugLog(action.type, action.payload);\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        userId: decoded.id,\r\n        role: decoded.role,\r\n      };\r\n    case AUTH_LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\actions\\index.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\AdminDashboard.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Login\\Login.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterDashboard.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\utils\\debugMode.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\state\\actions\\actionTypes.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\Logout.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Village\\Village.component.js",["172"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchVillage } from '../../../state/actions/index';\r\n\r\nimport { Profile, Label } from '../../common/ProfileStyle';\r\nimport { Button } from '../../common/';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { ComponentTitle } from '../../common';\r\n\r\nconst Village = ({ villageData, userId, fetchVillage }) => {\r\n  // const { villageData, fetchVillage } = props;\r\n  useEffect(() => {\r\n    // console.log(\"village component useEffect\", villageData);\r\n    fetchVillage(userId); // !This headmaster ID is being hardcoded right now\r\n  }, []);\r\n  // console.log(\"village component, villageData\", villageData);\r\n  return (\r\n    <Profile>\r\n      <ComponentTitle titleText=\"Village\" />\r\n      <Label>Headmaster:</Label>\r\n      <p>Mr Headmaster</p>\r\n      <Label>Village Contact:</Label>\r\n      <p>{villageData.village_contact_name}</p>\r\n      <Label>Village Contact Phone:</Label>\r\n      <p>{villageData.village_contact_phone}</p>\r\n\r\n      <Label>Education Contact:</Label>\r\n      {/* //! These are not in the data from server atm */}\r\n      <p>{villageData.educationContactName}</p>\r\n      <p>{villageData.educationContactEmail}</p>\r\n      <p>{villageData.educationContactPhone}</p>\r\n      <Label>Notes: </Label>\r\n      <p>{villageData.notes}</p>\r\n      <div className=\"villageButtons\">\r\n        <Link to={`/village/edit/${villageData.id}`}>\r\n          <ThemeProvider theme={{ color: '#6ac66b' }}>\r\n            <Button buttonText=\"Edit Village Profile\" />\r\n          </ThemeProvider>\r\n        </Link>\r\n      </div>\r\n    </Profile>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    villageData: state.headmasterReducer.villageData,\r\n    userId: state.authReducer.userId,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchVillage })(Village);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\SchoolForm.js",["173","174"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\n\r\nimport { Form, Input } from 'antd';\r\n\r\nimport { editSchool } from '../../../state/actions';\r\nimport {\r\n  layout,\r\n  FormContainer,\r\n  tailLayout,\r\n  Required,\r\n} from '../../common/FormStyle';\r\nimport Button from '../../common/Button';\r\nimport { axiosWithAuth } from '../../../utils/axiosWithAuth';\r\n\r\nconst baseURL = 'https://cors-anywhere.herokuapp.com/http://54.158.134.245/api';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  count_students_currently_enrolled: '',\r\n  count_teachers: '',\r\n  id: '',\r\n  notes: '',\r\n  other_dynamic_questions: [],\r\n  school_description: '',\r\n  school_goals: '',\r\n  school_needs: '',\r\n};\r\n\r\nconst SchoolForm = props => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const pathname = useHistory().location.pathname;\r\n  const params = useParams().schoolId;\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    // Form will populate only if the URL includes \"edit\"\r\n    if (pathname.includes('edit')) {\r\n      axiosWithAuth()\r\n        .get(`/school/${params}`)\r\n        .then(res => {\r\n          console.log(res);\r\n          const data = res.data;\r\n          form.setFieldsValue(data);\r\n          setFormData(data);\r\n        })\r\n        .catch(err => console.dir(err));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    props.editSchool(params, formData);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form.Item {...tailLayout}>\r\n        <Link to=\"/school-village\">Go Back to School Profile</Link>\r\n      </Form.Item>\r\n\r\n      <Form onFinish={handleSubmit} form={form} {...layout}>\r\n        <Form.Item\r\n          label=\"Headmaster\"\r\n          name=\"headmaster\"\r\n          rules={[{ required: true, message: 'Headmaster name is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"headmaster\"\r\n            defaultValue=\"Mr Headmaster\"\r\n            value={formData.headmaster}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"School Description\"\r\n          name=\"school_description\"\r\n          rules={[\r\n            { required: true, message: 'School description is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"school_description\"\r\n            value={formData.school_description}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"School Goals Description\" name=\"school_goals\">\r\n          <Input\r\n            type=\"text\"\r\n            name=\"school_goals\"\r\n            value={formData.school_goals}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"School Needs Description\" name=\"school_needs\">\r\n          <Input\r\n            type=\"text\"\r\n            name=\"school_needs\"\r\n            value={formData.school_needs}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Students Currently Enrolled\"\r\n          name=\"count_students_currently_enrolled\"\r\n          rules={[{ required: true, message: 'Student count is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"count_students_currently_enrolled\"\r\n            value={formData.count_students_currently_enrolled}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Teachers Currently Teaching\"\r\n          name=\"count_teachers\"\r\n          rules={[{ required: true, message: 'Teacher count is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"count_teachers\"\r\n            value={formData.count_teachers}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Notes\" name=\"notes\">\r\n          <Input.TextArea\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button\r\n            className=\"l2-btn btn\"\r\n            htmlType=\"submit\"\r\n            buttonText=\"Submit School Edit\"\r\n          />\r\n          <Required id=\"requiredMsg\">\r\n            Fields with <span id=\"required\">&#42;</span> are required.\r\n          </Required>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default connect(null, { editSchool })(SchoolForm);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Village\\VillageForm.js",["175","176"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport { axiosWithAuth } from '../../../utils/axiosWithAuth';\r\n\r\nimport { Form, Input } from 'antd';\r\n\r\nimport { editVillage } from '../../../state/actions';\r\nimport {\r\n  layout,\r\n  FormContainer,\r\n  tailLayout,\r\n  Required,\r\n} from '../../common/FormStyle';\r\nimport Button from '../../common/Button';\r\n\r\nconst baseURL = 'https://cors-anywhere.herokuapp.com/http://54.158.134.245/api';\r\n\r\n//! use real name when full server is developed\r\nconst initialState = {\r\n  headmaster: 'Mr Headmaster',\r\n  headmasters: [],\r\n  schools: [],\r\n  village_contact_name: '',\r\n  village_contact_phone: '',\r\n  villageContactEmail: '',\r\n  educationContactName: '',\r\n  educationContactEmail: '',\r\n  educationContactPhone: '',\r\n  notes: '',\r\n};\r\n\r\nconst VillageForm = props => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const pathname = useHistory().location.pathname;\r\n  const params = useParams().villageId;\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    // Form will populate only if the URL includes \"edit\"\r\n    if (pathname.includes('edit')) {\r\n      axiosWithAuth()\r\n        .get(`village/${params}`)\r\n        .then(res => {\r\n          // console.log(res);\r\n          form.setFieldsValue(res.data);\r\n          setFormData(res.data);\r\n        })\r\n        .catch(err => console.dir(err));\r\n    }\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    // console.log(formData);\r\n    props.editVillage(params, formData);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form.Item {...tailLayout}>\r\n        <Link to=\"/school-village\">Go Back to Village Profile</Link>\r\n      </Form.Item>\r\n      <Form onFinish={handleSubmit} form={form} {...layout}>\r\n        <Form.Item\r\n          label=\"Headmaster\"\r\n          name=\"headmaster\"\r\n          rules={[{ required: true, message: 'Headmaster name is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"headmaster\"\r\n            defaultValue=\"Mr Headmaster\"\r\n            value={formData.headmaster}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Village Contact Name\"\r\n          name=\"village_contact_name\"\r\n          rules={[\r\n            { required: true, message: ' Village Contact Name is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"village_contact_name\"\r\n            value={formData.village_contact_name}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Village Contact Phone\"\r\n          name=\"village_contact_phone\"\r\n          rules={[\r\n            { required: true, message: 'Village Contact Phone is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"village_contact_phone\"\r\n            value={formData.village_contact_phone}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Education Contact Name\"\r\n          name=\"educationContactName\"\r\n          rules={[\r\n            { required: true, message: 'Education Contact Name is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"educationContactName\"\r\n            value={formData.educationContactName}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Education Contact Phone\"\r\n          name=\"educationContactPhone\"\r\n          rules={[\r\n            { required: true, message: 'Education Contact Phone is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"educationContactPhone\"\r\n            value={formData.educationContactPhone}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Education Contact Email\"\r\n          name=\"educationContactEmail\"\r\n          rules={[{ required: true, message: 'Education Email is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"email\"\r\n            name=\"educationContactEmail\"\r\n            value={formData.educationContactEmail}\r\n            onChange={e => handleChange(e)}\r\n            required\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Notes\" name=\"notes\">\r\n          <Input.TextArea\r\n            name=\"notes\"\r\n            value={formData.notes}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button\r\n            className=\"l2-btn btn\"\r\n            htmlType=\"submit\"\r\n            buttonText=\"Submit Village Edit\"\r\n          />\r\n          <Required id=\"requiredMsg\">\r\n            Fields with <span id=\"required\">&#42;</span> are required.\r\n          </Required>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default connect(null, { editVillage })(VillageForm);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterProfile\\Profile.js",["177","178","179","180","181","182"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { fetchHeadmasterProfile } from '../../../../state/actions';\r\n\r\nimport { Profile, Label } from '../../../common/ProfileStyle';\r\nimport { Button } from '../../../common/';\r\nimport { ComponentTitle } from '../../../common';\r\n\r\n// const baseURL = 'https://cors-anywhere.herokuapp.com/http://54.158.134.245/api';\r\nconst HeadmasterProfile = props => {\r\n  const { profile } = props;\r\n  useEffect(() => {\r\n    props.fetchHeadmasterProfile(1); // change this later with login\r\n  }, []);\r\n  console.log(profile);\r\n  return (\r\n    <Profile>\r\n      <ComponentTitle titleText=\"Village\" />\r\n      <img src={`${profile.headmasters_picture}`} />\r\n      <Label>Name:</Label>\r\n      <p>{`${profile.first_name} ${profile.last_name}`}</p>\r\n\r\n      <Label>Gender:</Label>\r\n      <p>{profile.gender}</p>\r\n\r\n      <Label>Address:</Label>\r\n      <p>{profile.address}</p>\r\n\r\n      <Label>Bio:</Label>\r\n      <p>{profile.bio}</p>\r\n\r\n      <Label>Communication App:</Label>\r\n      <p>{profile.communication_app}</p>\r\n\r\n      <Label>DOB:</Label>\r\n      <p>{profile.dob}</p>\r\n\r\n      <Label>General Availability:</Label>\r\n      <p>{profile.general_availability}</p>\r\n\r\n      <Label>Mentor Advisor Point of Contact:</Label>\r\n      <p>{profile.mentor_advisor_point_of_contact}</p>\r\n\r\n      <Label>Mentor Program Goals:</Label>\r\n      <p>{profile.goals_mentor_program}</p>\r\n\r\n      <Label>Personal Goals:</Label>\r\n      <p>{profile.goals_personal}</p>\r\n\r\n      <Label>School Community Goals:</Label>\r\n      <p>{profile.goals_school_community}</p>\r\n\r\n      <Label>Goals Mentor Program:</Label>\r\n      <p>{profile.goals_mentor_program}</p>\r\n\r\n      <p></p>\r\n\r\n      <Label>Time Zone:</Label>\r\n      <p>{profile.time_zone}</p>\r\n      <div className=\"villageButtons\">\r\n        <Link to={`/profile/edit/${profile.id}`}>\r\n          <ThemeProvider theme={{ color: '#6ac66b' }}>\r\n            <Button buttonText=\"Edit Your Profile\" />\r\n          </ThemeProvider>\r\n        </Link>\r\n      </div>\r\n    </Profile>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    profile: state.headmasterReducer.headmasterProfile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchHeadmasterProfile })(\r\n  HeadmasterProfile\r\n);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\Schools.component.js",["183","184"],"import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchSchools } from '../../../state/actions/index';\r\nimport { StyledSchools } from './School.styles';\r\nimport School from './School.component';\r\nimport { ComponentTitle } from '../../common';\r\n\r\nconst Schools = props => {\r\n  useEffect(() => {\r\n    props.fetchSchools();\r\n  }, []);\r\n  return (\r\n    <StyledSchools>\r\n      <ComponentTitle titleText=\"Schools\" />\r\n      {props.schools.map(s => (\r\n        <School school={s} />\r\n      ))}\r\n    </StyledSchools>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    schools: state.headmasterReducer.schoolData,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchSchools })(Schools);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterProfile\\ProfileForm.js",["185","186"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { Form, Input, DatePicker, Space, Radio } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { editHeadmasterProfile } from '../../../../state/actions';\r\nimport {\r\n  layout,\r\n  FormContainer,\r\n  tailLayout,\r\n  Required,\r\n} from '../../../common/FormStyle';\r\nimport Button from '../../../common/Button';\r\nimport { debugLog } from '../../../../utils/debugMode';\r\n\r\nconst baseURL = 'https://cors-anywhere.herokuapp.com/http://54.158.134.245/api';\r\n\r\nconst initialState = {\r\n  first_name: '',\r\n  gender: {\r\n    male: false,\r\n    female: false,\r\n    other: false,\r\n  },\r\n  address: '',\r\n  bio: '',\r\n  communication_app: '',\r\n  dob: '',\r\n  general_availability: '',\r\n  goals_mentor_program: '',\r\n  goals_personal: '',\r\n  goals_school_community: '',\r\n  mentor_advisor_point_of_contact: '',\r\n  phone_number: '',\r\n  photo_url: '',\r\n  programId: '',\r\n  registration_status: '',\r\n  last_name: '',\r\n  time_zone: '',\r\n  villageId: '',\r\n};\r\n\r\nconst dateFormat = 'MM/DD/YYYY';\r\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n\r\nconst ProfileForm = props => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  const [value, setValue] = useState(1);\r\n  const pathname = useHistory().location.pathname;\r\n  const params = useParams().id;\r\n  const [form] = Form.useForm();\r\n\r\n  useEffect(() => {\r\n    axios // ! This should later become available through axiosWithAuth() only once we figure out the Auth with Stakeholder's backend\r\n      .get(`${baseURL}/headmaster/1`)\r\n      .then(res => {\r\n        form.setFieldsValue(res.data);\r\n        setFormData(res.data);\r\n      })\r\n      .catch(err => console.dir(err));\r\n  }, []);\r\n\r\n  const onChange = e => {\r\n    console.log('radio checked', e.target.value);\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    console.log(formData);\r\n    props.editHeadmasterProfile(params, formData);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    debugLog(formData);\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Form.Item {...tailLayout}>\r\n        <Link to=\"/profile\">Go Back to your Profile</Link>\r\n      </Form.Item>\r\n      <Form onFinish={handleSubmit} form={form} {...layout}>\r\n        <Form.Item\r\n          label=\"First Name\"\r\n          name=\"first_name\"\r\n          rules={[{ required: true, message: 'First Name is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            defaultValue=\"Mr Headmaster\" // Change this\r\n            value={formData.first_name}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Last Name\"\r\n          name=\"last_name\"\r\n          rules={[{ required: true, message: 'Last Name is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={formData.last_name}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Space direction=\"vertical\" size={12} {...tailLayout}>\r\n          <DatePicker\r\n            defaultValue={moment(`${formData.dob}`, dateFormatList[0])}\r\n            format={dateFormat}\r\n          />\r\n        </Space>\r\n\r\n        <Form.Item\r\n          label=\"Address\"\r\n          name=\"address\"\r\n          rules={[{ required: true, message: 'Address is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            value={formData.address}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Phone Number\"\r\n          name=\"phone_number\"\r\n          rules={[{ required: true, message: 'Phone Number is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"phone_number\"\r\n            value={formData.phone_number}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Gender\" name=\"gender\">\r\n          <Radio.Group onChange={onChange} value={value}>\r\n            <Radio value={1}>Male</Radio>\r\n            <Radio value={2}>Female</Radio>\r\n            <Radio value={3}>Other</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Bio\"\r\n          name=\"bio\"\r\n          rules={[{ required: true, message: 'Bio is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"bio\"\r\n            value={formData.bio}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Communication App\"\r\n          name=\"communication_app\"\r\n          rules={[\r\n            { required: true, message: 'Communication app is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"communication_app\"\r\n            value={formData.communication_app}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"General Availability\"\r\n          name=\"general_availability\"\r\n          rules={[\r\n            { required: true, message: 'General Availability is required' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"general_availability\"\r\n            value={formData.general_availability}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Mentor Program Goals\"\r\n          name=\"goals_mentor_program\"\r\n          rules={[\r\n            { required: true, message: 'Goals of mentor program is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.goals_mentor_program}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Personal Goals\"\r\n          name=\"goals_personal\"\r\n          rules={[{ required: true, message: 'Personal goals are required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.goals_personal}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"School Community Goals\"\r\n          name=\"goals_school_community\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Goals for schools community are required.',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.goals_school_community}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Mentor Advisor Point of Contact\"\r\n          name=\"mentor_advisor_point_of_contact\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Mentor advisor point of contact is required.',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.mentor_advisor_point_of_contact}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button\r\n            className=\"l2-btn btn\"\r\n            htmlType=\"submit\"\r\n            buttonText=\"Submit Village Edit\"\r\n          />\r\n          <Required id=\"requiredMsg\">\r\n            Fields with <span id=\"required\">&#42;</span> are required.\r\n          </Required>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default connect(null, { editHeadmasterProfile })(ProfileForm);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Mentees\\Mentees.js",["187","188"],"import React, { useEffect, useState } from 'react';\r\nimport { axiosWithAuth } from '../../../../utils/axiosWithAuth';\r\nimport { Button, Divider, Input, Modal, List, Avatar } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport { checkToken, fetchMentees } from '../../../../state/actions/index';\r\nimport MenteeForm from './MenteeForm';\r\nimport MenteeProfile from './MenteeProfile';\r\nconst Mentees = props => {\r\n  let menteesSelection = [...props.mentees];\r\n  const [search, setSearch] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [editing, setEditing] = useState(false);\r\n  const [currentMentee, setCurrentMentee] = useState({});\r\n\r\n  const editingHandler = e => {\r\n    setEditing(!editing);\r\n    console.log(e);\r\n  };\r\n  const searchHandler = e => setSearch(e.target.value);\r\n  const moreInfoHandler = (e, menteeData) => {\r\n    if (showModal) {\r\n      // Closing Modal\r\n      setShowModal(false);\r\n      setCurrentMentee({});\r\n      setEditing(false);\r\n    } else {\r\n      // Opening Modal\r\n      setShowModal(true);\r\n      setCurrentMentee(menteeData);\r\n      // console.log(menteeData);\r\n    }\r\n  };\r\n\r\n  if (Array.isArray(menteesSelection)) {\r\n    menteesSelection = menteesSelection.filter(\r\n      item =>\r\n        item.first_name.toLowerCase().includes(search.toLowerCase()) ||\r\n        item.last_name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.fetchMentees();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"menteeContainer\">\r\n      <h1 id=\"menteeTittle\">Mentee Management</h1>\r\n      <div className=\"exploreWrapper\">\r\n        <Button\r\n          style={{ width: '80%', marginBottom: '10pt', alignSelf: 'center' }}\r\n          align=\"center\"\r\n        >\r\n          Create New Library\r\n        </Button>\r\n        <Input.Search\r\n          value={search}\r\n          placeholder=\"Search by Name\"\r\n          style={{ width: '80%', alignSelf: 'center' }}\r\n          onChange={searchHandler}\r\n        />\r\n        <Divider />\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={menteesSelection}\r\n          renderItem={item => (\r\n            <List.Item>\r\n              <div className=\"listItemWrapper\">\r\n                <div className=\"listItemMeta\">\r\n                  <List.Item.Meta\r\n                    avatar={<Avatar src={item.mentee_picture} />}\r\n                    title={\r\n                      <a href=\"https://ant.design\">\r\n                        {item.first_name + ' ' + item.last_name}\r\n                      </a>\r\n                    }\r\n                    description={item.academic_description}\r\n                  />\r\n                </div>\r\n                <div className=\"listItemButtonWrapper\">\r\n                  <Button\r\n                    onClick={e => moreInfoHandler(e, item)}\r\n                    className=\"listItemButton\"\r\n                    size=\"middle\"\r\n                    type=\"default\"\r\n                  >\r\n                    More Info\r\n                  </Button>\r\n                  <Button\r\n                    onClick={e => {\r\n                      moreInfoHandler(e, item);\r\n                      editingHandler();\r\n                    }}\r\n                    className=\"listItemButton\"\r\n                    danger\r\n                    size=\"middle\"\r\n                    type=\"default\"\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </List.Item>\r\n          )}\r\n        />\r\n        ,\r\n      </div>\r\n      <Modal\r\n        className=\"menteeModal\"\r\n        visible={showModal}\r\n        title=\"Mentee Profile\"\r\n        onCancel={moreInfoHandler}\r\n        maskClosable\r\n        destroyOnClose\r\n        footer={[\r\n          <Button\r\n            key=\"back\"\r\n            onClick={editing ? editingHandler : moreInfoHandler}\r\n          >\r\n            Return\r\n          </Button>,\r\n          <Button key=\"delete\" onClick={() => console.log('delete')}>\r\n            Delete\r\n          </Button>,\r\n          editing ? (\r\n            <Button key=\"submit\" type=\"primary\" onClick={moreInfoHandler}>\r\n              Submit\r\n            </Button>\r\n          ) : (\r\n            <Button key=\"edit\" type=\"primary\" onClick={editingHandler}>\r\n              Edit\r\n            </Button>\r\n          ),\r\n        ]}\r\n      >\r\n        {editing ? (\r\n          <MenteeForm />\r\n        ) : (\r\n          <MenteeProfile currentMentee={currentMentee} />\r\n        )}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    mentees: state.headmasterReducer.mentees,\r\n    userId: state.authReducer.userId,\r\n    role: state.authReducer.role,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { checkToken, fetchMentees })(Mentees);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\utils\\axiosWithAuth.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\Libraries.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\EditLibrary.js",["189","190","191"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport { axiosWithAuth } from '../../../utils/axiosWithAuth';\r\nimport { Form, Input, Button, Divider } from 'antd';\r\nimport { editLibrary } from '../../../state/actions';\r\n\r\n//? would it be faster on base-model cellphones to store library data on redux when the edit button is pushed, and then pull from the store to here, or to have the simple secondary axios request pull that specific library data.\r\n//* I think it'll be best to store all libraries into redux store, then pull the specific one from the store when this page loads\r\n//TODO: refactor to use redux.\r\n\r\nconst initialState = {\r\n  // id: \"\",\r\n  name: '',\r\n  description: '',\r\n  library_usage: '',\r\n  notes: '',\r\n  image: '',\r\n};\r\n\r\nfunction EditLibraryForm({ editLibrary }) {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const { push } = useHistory();\r\n\r\n  const params = useParams().id;\r\n  // ? Why is this console logging 4 times? It's running too much.\r\n  // console.log(params);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  const getData = () => {\r\n    // ! This should later become available through axiosWithAuth() only once we figure out the Auth with Stakeholder's backend\r\n    axiosWithAuth()\r\n      .get(`library/${params}`)\r\n      .then(res => {\r\n        form.setFieldsValue(res.data);\r\n        setFormData(res.data);\r\n      })\r\n      .catch(err => console.dir(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    // console.log('formData', formData);\r\n    editLibrary(params, formData);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // push('admin/libraries');\r\n    window.location.replace('/admin/libraries');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    // console.log(formData);\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={handleSubmit} form={form}>\r\n      <Form.Item label=\"Library Name\" name=\"name\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name.value}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Description\" name=\"description\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={formData.description.value}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Usage\" name=\"library_usage\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"library_usage\"\r\n          value={formData.library_usage}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Notes\" name=\"notes\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"notes\"\r\n          value={formData.notes}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Image Url\" name=\"image\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          value={formData.image}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      {/* TODO: When this image renders, it removes the buttons off the page. Not covers them, but completely removes them. Not useful. */}\r\n      {/* {formData.image ? (\r\n        <img src={formData.image} alt=\"Library\" />\r\n      ) : (\r\n        <p>Previous Image URL broken or not provided</p>\r\n      )} */}\r\n\r\n      <Form.Item>\r\n        {/* <input type=\"submit\" value=\"Submit Edit\" /> */}\r\n        <Button htmlType=\"button\" onClick={handleSubmit}>\r\n          Save Changes\r\n        </Button>\r\n        <Button htmlType=\"button\" onClick={() => getData()}>\r\n          Reset changes\r\n        </Button>\r\n        <Button htmlType=\"link\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\n// export default EditLibraryForm;\r\nexport default connect(null, { editLibrary })(EditLibraryForm);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Admin\\AddLibrary.js",["192","193","194"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport { axiosWithAuth } from '../../../utils/axiosWithAuth';\r\nimport { Form, Input, Button, Divider } from 'antd';\r\nimport { addLibrary } from '../../../state/actions';\r\n\r\n//? would it be faster on base-model cellphones to store library data on redux when the edit button is pushed, and then pull from the store to here, or to have the simple secondary axios request pull that specific library data.\r\n//* I think it'll be best to store all libraries into redux store, then pull the specific one from the store when this page loads\r\n//TODO: refactor to use redux.\r\n\r\nconst initialState = {\r\n  // id: \"\",\r\n  name: '',\r\n  description: '',\r\n  library_usage: '',\r\n  notes: '',\r\n  image: '',\r\n};\r\n\r\nfunction AddLibraryForm({ addLibrary }) {\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const { push } = useHistory();\r\n\r\n  const params = useParams().id;\r\n  // ? Why is this console logging 4 times? It's running too much.\r\n  // console.log(params);\r\n\r\n  const [form] = Form.useForm();\r\n\r\n  // const getData = () => {\r\n  //   axiosWithAuth()\r\n  //     .get(`library/${params}`)\r\n  //     .then(res => {\r\n  //       form.setFieldsValue(res.data);\r\n  //       setFormData(res.data);\r\n  //     })\r\n  //     .catch(err => console.dir(err));\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   getData();\r\n  // }, []);\r\n\r\n  const handleSubmit = async () => {\r\n    // console.log('formData', formData);\r\n    addLibrary(params, formData);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    push('admin/libraries');\r\n    // window.location.replace('/admin/libraries');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    // console.log(formData);\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={handleSubmit} form={form}>\r\n      <Form.Item label=\"Library Name\" name=\"name\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name.value}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Description\" name=\"description\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          value={formData.description.value}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Usage\" name=\"library_usage\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"library_usage\"\r\n          value={formData.library_usage}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Notes\" name=\"notes\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"notes\"\r\n          value={formData.notes}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Image Url\" name=\"image\">\r\n        <Input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          value={formData.image}\r\n          onChange={e => handleChange(e)}\r\n        />\r\n      </Form.Item>\r\n\r\n      {/* TODO: When this image renders, it removes the buttons off the page. Not covers them, but completely removes them. Not useful. */}\r\n      {/* {formData.image ? (\r\n        <img src={formData.image} alt=\"Library\" />\r\n      ) : (\r\n        <p>Previous Image URL broken or not provided</p>\r\n      )} */}\r\n\r\n      <Form.Item>\r\n        {/* <input type=\"submit\" value=\"Submit Edit\" /> */}\r\n        <Button htmlType=\"button\" onClick={handleSubmit}>\r\n          Add Library\r\n        </Button>\r\n        {/* <Button htmlType=\"button\" onClick={() => getData()}>\r\n          Reset changes\r\n        </Button> */}\r\n        <Button htmlType=\"link\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n}\r\n\r\n// export default EditLibraryForm;\r\nexport default connect(null, { addLibrary })(AddLibraryForm);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\HeadmasterDashboard.style.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\FormStyle.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\Button.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\School.component.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\ProfileStyle.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\School\\School.styles.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Mentees\\MenteeProfile.js",["195"],"import { List, Avatar, Divider, Skeleton, Table, Tag } from 'antd';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport { debugLog } from '../../../../utils/debugMode';\r\nconst MenteeProfile = ({ currentMentee }) => {\r\n  debugLog(\r\n    'Prop drilled from Mentees.js',\r\n    currentMentee,\r\n    moment.utc(currentMentee.dob).format('dddd, MMMM Do of YYYY')\r\n  );\r\n  const columns = [\r\n    {\r\n      title: 'Contact Hours - From',\r\n      dataIndex: 'as_early_as',\r\n      key: 'as_early_as',\r\n    },\r\n    {\r\n      title: 'Contact Hours - Until',\r\n      dataIndex: 'as_late_as',\r\n      key: 'as_late_as',\r\n    },\r\n    {\r\n      title: 'Time Zone (UTC)',\r\n      dataIndex: 'time_zone',\r\n      key: 'time_zone',\r\n    },\r\n    {\r\n      title: 'Methods',\r\n      dataIndex: 'methods',\r\n      key: 'methods',\r\n      render: tags => (\r\n        <>\r\n          {tags.map(tag => {\r\n            return (\r\n              <Tag color=\"geekblue\" key={tags.indexOf(tag)}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <div className=\"menteeProfileWrapper\">\r\n      {!currentMentee ? (\r\n        <Skeleton />\r\n      ) : (\r\n        <>\r\n          <Avatar\r\n            src={currentMentee.mentee_picture}\r\n            size={250}\r\n            style={{ alignSelf: 'center' }}\r\n          />\r\n          <Divider size=\"large\" />\r\n          <h1 style={{ alignSelf: 'center' }}>\r\n            {currentMentee.first_name + ' ' + currentMentee.last_name}\r\n          </h1>\r\n          <Divider plain>Email</Divider>\r\n          <p>{currentMentee.email}</p>\r\n          <Divider plain>Languages (left to rigth)</Divider>\r\n          <p>{currentMentee.primary_language}</p>\r\n          <Divider plain>Gender</Divider>\r\n          <p>{currentMentee.gender}</p>\r\n          <Divider plain>Date of Birth</Divider>\r\n          <p>{moment.utc(currentMentee.dob).format('dddd, MMMM Do of YYYY')}</p>\r\n          <Divider plain>Mentor</Divider>\r\n          <p>\r\n            {currentMentee.mentorId ? currentMentee.mentorId : 'Unassigned'}\r\n          </p>\r\n          <Divider plain>Grades</Divider>\r\n          <p>{`English :${currentMentee.english_lvl}`}</p>\r\n          <p>{`Math :${currentMentee.math_lvl}`}</p>\r\n          <p>{`Reading :${currentMentee.reading_lvl}`}</p>\r\n          <p>{`School :${currentMentee.school_lvl}`}</p>\r\n          <Divider plain>Academic Description</Divider>\r\n          <p>{currentMentee.academic_description}</p>\r\n          <Divider plain>Support Areas</Divider>\r\n          <p>{currentMentee.support_needed}</p>\r\n          <Divider plain>Availability</Divider>\r\n          <Table\r\n            align=\"center\"\r\n            pagination={false}\r\n            size=\"small\"\r\n            tableLayout=\"fixed\"\r\n            dataSource={[currentMentee.availability]}\r\n            columns={columns}\r\n            key=\"table\"\r\n          />\r\n          <Divider plain>Other Questions</Divider>\r\n          {currentMentee.dynamic_questions.map(question => {\r\n            return (\r\n              <div key={question.qId}>\r\n                <Divider plain>{question.question}</Divider>\r\n                <p>{question.answer}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenteeProfile;\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Mentees\\MenteeForm.js",["196","197","198","199","200","201","202","203","204"],"import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport { Form, Input, DatePicker, Space, Radio } from 'antd';\r\nimport moment from 'moment';\r\n\r\nimport { editHeadmasterProfile } from '../../../../state/actions';\r\nimport {\r\n  layout,\r\n  FormContainer,\r\n  tailLayout,\r\n  Required,\r\n} from '../../../common/FormStyle';\r\nimport Button from '../../../common/Button';\r\nimport { debugLog } from '../../../../utils/debugMode';\r\n\r\nconst initialState = {\r\n  first_name: '',\r\n  last_name: '',\r\n  gender: '',\r\n  email: '',\r\n  primary_language: '',\r\n  dob: '',\r\n  mentee_picture: '',\r\n  english_lvl: '',\r\n  math_lvl: '',\r\n  reading_lvl: '',\r\n  school_lvl: '',\r\n  academic_description: '',\r\n  support_needed: '',\r\n};\r\n\r\nconst dateFormat = 'MM/DD/YYYY';\r\nconst dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\nconst timeFormat = 'HH:mm';\r\nconst genders = ['Male', 'Female', 'Other'];\r\n\r\nconst MenteeForm = props => {\r\n  const [formData, setFormData] = useState(initialState);\r\n  //   const [value, setValue] = useState(1);\r\n  const pathname = useHistory().location.pathname;\r\n  const params = useParams().id;\r\n  const [form] = Form.useForm();\r\n\r\n  //   const onChange = e => {\r\n  //     console.log('radio checked', e.target.value);\r\n  //     setValue(e.target.value);\r\n  //   };\r\n\r\n  const handleSubmit = async () => {\r\n    debugLog(formData);\r\n    props.editHeadmasterProfile(params, formData);\r\n  };\r\n\r\n  const handleChange = e => {\r\n    // debugLog(e);\r\n    if (moment.isMoment(e)) {\r\n      setFormData({ ...formData, dob: moment.utc(e).format() });\r\n      debugLog(moment.utc(e).format());\r\n    } else if (e.target.name == 'gender') {\r\n      setFormData({ ...formData, gender: genders[e.target.value] });\r\n    } else {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n  //   const handleChange = e => {\r\n  //     debugLog(moment.isMoment(e));\r\n  //   };\r\n  return (\r\n    <FormContainer>\r\n      <Form.Item {...tailLayout}></Form.Item>\r\n      <Form onFinish={handleSubmit} form={form} {...layout}>\r\n        <Form.Item\r\n          label=\"First Name\"\r\n          name=\"first_name\"\r\n          rules={[{ required: true, message: 'First Name is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"first_name\"\r\n            value={formData.first_name}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Last Name\"\r\n          name=\"last_name\"\r\n          rules={[{ required: true, message: 'Last Name is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={formData.last_name}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Date of Birth\"\r\n          name=\"dob\"\r\n          rules={[{ required: true, message: 'Date of Birth is required.' }]}\r\n        >\r\n          <DatePicker name=\"dob\" onChange={e => handleChange(e)} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"email\"\r\n          name=\"email\"\r\n          rules={[{ required: true, message: 'email is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Primary Language\"\r\n          name=\"primary_language\"\r\n          rules={[{ required: true, message: 'Phone Number is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"primary_language\"\r\n            value={formData.primary_language}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Gender\" name=\"gender\">\r\n          <Radio.Group\r\n            name=\"gender\"\r\n            value={formData.gender}\r\n            onChange={e => handleChange(e)}\r\n          >\r\n            <Radio value={0}>Male</Radio>\r\n            <Radio value={1}>Female</Radio>\r\n            <Radio value={2}>Other</Radio>\r\n          </Radio.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Picture URL\"\r\n          name=\"mentee_picture\"\r\n          rules={[{ required: true, message: 'Bio is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"mentee_picture\"\r\n            value={formData.mentee_picture}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"English Level\"\r\n          name=\"english_lvl\"\r\n          rules={[{ required: true, message: 'english level is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"english_lvl\"\r\n            value={formData.english_lvl}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Math Level\"\r\n          name=\"math_lvl\"\r\n          rules={[{ required: true, message: 'Math level is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"math_lvl\"\r\n            value={formData.math_lvl}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Reading Level\"\r\n          name=\"reading_lvl\"\r\n          rules={[{ required: true, message: 'reading level is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"reading_lvl\"\r\n            value={formData.reading_lvl}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"school Level\"\r\n          name=\"school_lvl\"\r\n          rules={[{ required: true, message: 'school level is required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"school_lvl\"\r\n            value={formData.school_lvl}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Academic Description\"\r\n          name=\"academic_description\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'academic description level is required.',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"academic_description\"\r\n            value={formData.academic_description}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Support Needed\"\r\n          name=\"support_needed\"\r\n          rules={[\r\n            { required: true, message: 'Support needed level is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"support_needed\"\r\n            value={formData.support_needed}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"General Availability\"\r\n          name=\"general_availability\"\r\n          rules={[\r\n            { required: true, message: 'General Availability is required' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            name=\"general_availability\"\r\n            value={formData.general_availability}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Mentor Program Goals\"\r\n          name=\"goals_mentor_program\"\r\n          rules={[\r\n            { required: true, message: 'Goals of mentor program is required.' },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.goals_mentor_program}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Personal Goals\"\r\n          name=\"goals_personal\"\r\n          rules={[{ required: true, message: 'Personal goals are required.' }]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.goals_personal}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"School Community Goals\"\r\n          name=\"goals_school_community\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Goals for schools community are required.',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.goals_school_community}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Mentor Advisor Point of Contact\"\r\n          name=\"mentor_advisor_point_of_contact\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Mentor advisor point of contact is required.',\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            type=\"text\"\r\n            value={formData.mentor_advisor_point_of_contact}\r\n            onChange={e => handleChange(e)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button\r\n            className=\"l2-btn btn\"\r\n            htmlType=\"submit\"\r\n            buttonText=\"Submit Village Edit\"\r\n          />\r\n          <Required id=\"requiredMsg\">\r\n            Fields with <span id=\"required\">&#42;</span> are required.\r\n          </Required>\r\n        </Form.Item>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default connect(null, { editHeadmasterProfile })(MenteeForm);\r\n","C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\index.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\ComponentTitles.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\LoadingComponent.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\List.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\FormInput.js",[],["205","206"],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\common\\FormButton.js",[],"C:\\Users\\jlpan\\labs-project\\village-book-builders-fe-a\\src\\components\\pages\\Headmaster\\Student\\StudentRegistration.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"215","line":6,"column":3,"nodeType":"213","messageId":"214","endLine":6,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":17,"column":6,"nodeType":"218","endLine":17,"endColumn":8,"suggestions":"219"},{"ruleId":"211","severity":1,"message":"220","line":18,"column":7,"nodeType":"213","messageId":"214","endLine":18,"endColumn":14},{"ruleId":"216","severity":1,"message":"221","line":51,"column":6,"nodeType":"218","endLine":51,"endColumn":8,"suggestions":"222"},{"ruleId":"211","severity":1,"message":"220","line":18,"column":7,"nodeType":"213","messageId":"214","endLine":18,"endColumn":14},{"ruleId":"216","severity":1,"message":"221","line":52,"column":6,"nodeType":"218","endLine":52,"endColumn":8,"suggestions":"223"},{"ruleId":"211","severity":1,"message":"224","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"225","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":20},{"ruleId":"211","severity":1,"message":"226","line":2,"column":22,"nodeType":"213","messageId":"214","endLine":2,"endColumn":31},{"ruleId":"211","severity":1,"message":"227","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"216","severity":1,"message":"228","line":17,"column":6,"nodeType":"218","endLine":17,"endColumn":8,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":22,"column":7,"nodeType":"232","endLine":22,"endColumn":53},{"ruleId":"211","severity":1,"message":"233","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":14},{"ruleId":"216","severity":1,"message":"228","line":12,"column":6,"nodeType":"218","endLine":12,"endColumn":8,"suggestions":"234"},{"ruleId":"211","severity":1,"message":"235","line":52,"column":9,"nodeType":"213","messageId":"214","endLine":52,"endColumn":17},{"ruleId":"216","severity":1,"message":"236","line":64,"column":6,"nodeType":"218","endLine":64,"endColumn":8,"suggestions":"237"},{"ruleId":"211","severity":1,"message":"238","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":23},{"ruleId":"216","severity":1,"message":"228","line":44,"column":6,"nodeType":"218","endLine":44,"endColumn":8,"suggestions":"239"},{"ruleId":"211","severity":1,"message":"240","line":6,"column":31,"nodeType":"213","messageId":"214","endLine":6,"endColumn":38},{"ruleId":"211","severity":1,"message":"241","line":25,"column":11,"nodeType":"213","messageId":"214","endLine":25,"endColumn":15},{"ruleId":"216","severity":1,"message":"242","line":46,"column":6,"nodeType":"218","endLine":46,"endColumn":8,"suggestions":"243"},{"ruleId":"211","severity":1,"message":"244","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"238","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":23},{"ruleId":"211","severity":1,"message":"240","line":6,"column":31,"nodeType":"213","messageId":"214","endLine":6,"endColumn":38},{"ruleId":"211","severity":1,"message":"245","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":14},{"ruleId":"211","severity":1,"message":"244","line":1,"column":27,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"233","line":3,"column":33,"nodeType":"213","messageId":"214","endLine":3,"endColumn":37},{"ruleId":"211","severity":1,"message":"227","line":4,"column":8,"nodeType":"213","messageId":"214","endLine":4,"endColumn":13},{"ruleId":"211","severity":1,"message":"246","line":6,"column":35,"nodeType":"213","messageId":"214","endLine":6,"endColumn":40},{"ruleId":"211","severity":1,"message":"247","line":35,"column":7,"nodeType":"213","messageId":"214","endLine":35,"endColumn":17},{"ruleId":"211","severity":1,"message":"248","line":36,"column":7,"nodeType":"213","messageId":"214","endLine":36,"endColumn":21},{"ruleId":"211","severity":1,"message":"249","line":37,"column":7,"nodeType":"213","messageId":"214","endLine":37,"endColumn":17},{"ruleId":"211","severity":1,"message":"235","line":43,"column":9,"nodeType":"213","messageId":"214","endLine":43,"endColumn":17},{"ruleId":"250","severity":1,"message":"251","line":62,"column":30,"nodeType":"252","messageId":"253","endLine":62,"endColumn":32},{"ruleId":"207","replacedBy":"254"},{"ruleId":"209","replacedBy":"255"},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'AUTH_START' is defined but never used.","Identifier","unusedVar","'AUTH_FAIL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchVillage' and 'userId'. Either include them or remove the dependency array. If 'fetchVillage' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["258"],"'baseURL' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form', 'params', and 'pathname'. Either include them or remove the dependency array.",["259"],["260"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["261"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.",["262"],"'pathname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["263"],"'axiosWithAuth' is defined but never used.",["264"],"'Divider' is defined but never used.","'push' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["265"],"'useEffect' is defined but never used.","'List' is defined but never used.","'Space' is defined but never used.","'dateFormat' is assigned a value but never used.","'dateFormatList' is assigned a value but never used.","'timeFormat' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["256"],["257"],"no-global-assign","no-unsafe-negation",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"268","fix":"270"},{"desc":"271","fix":"272"},{"desc":"271","fix":"273"},{"desc":"274","fix":"275"},{"desc":"271","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [fetchVillage, userId]",{"range":"279","text":"280"},"Update the dependencies array to be: [form, params, pathname]",{"range":"281","text":"282"},{"range":"283","text":"282"},"Update the dependencies array to be: [props]",{"range":"284","text":"285"},{"range":"286","text":"285"},"Update the dependencies array to be: [form]",{"range":"287","text":"288"},{"range":"289","text":"285"},"Update the dependencies array to be: [getData]",{"range":"290","text":"291"},[678,680],"[fetchVillage, userId]",[1426,1428],"[form, params, pathname]",[1509,1511],[719,721],"[props]",[410,412],[1813,1815],"[form]",[1464,1466],[1591,1593],"[getData]"]